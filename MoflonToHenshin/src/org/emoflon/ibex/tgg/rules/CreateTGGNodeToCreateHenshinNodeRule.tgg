#using MoflonToHenshin.*
#using AttrCondDefLibrary.*

#abstract #rule CreateTGGNodeToCreateHenshinNodeRule #extends TGGRuleToHenshinRuleContextAbstractRule #with MoflonToHenshin

#source { 
	 tTggRule : TGGRule{
		++ - nodes -> tTGGNode 
	}
	
	++ tTGGNode : TGGRuleNode{
		//bindingType := enum::BindingType::CREATE
	}
}

#target {
	 hRule : Rule{
		 - rhs -> rhs
	}
	
	
	 rhs : Graph{
	 	++ - nodes -> hCreatedNode
	 }
	 
	++ hCreatedNode : Node 
}

#correspondence {
	++ tggNodeToHenshinNode : TGGNodeToHenshinNode {
		#src->tTGGNode
		#trg->hCreatedNode
	}
}

#attributeConditions {
	setCreateAttribute(tTGGNode.bindingType)
	eq_string(tTGGNode.name, hCreatedNode.name)
}
